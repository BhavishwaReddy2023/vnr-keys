name: Development Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches-ignore: [ main, develop ]

env:
  NODE_VERSION: '18'
  NPM_VERSION: '9'

jobs:
  # Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        npm-version: ${{ env.NPM_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Run frontend linting
      working-directory: ./frontend
      run: npm run lint
      
    - name: Check frontend build
      working-directory: ./frontend
      run: npm run build
      
    - name: Check backend syntax
      working-directory: ./backend
      run: node -c index.js
      
    - name: Run security audit
      run: |
        cd frontend && npm audit --audit-level high
        cd ../backend && npm audit --audit-level high
      continue-on-error: true

  # Dependency Updates Check
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        npm-version: ${{ env.NPM_VERSION }}
        
    - name: Check for outdated dependencies
      run: |
        echo "Frontend dependencies:"
        cd frontend && npm outdated || echo "All frontend dependencies are up to date"
        echo "Backend dependencies:"
        cd ../backend && npm outdated || echo "All backend dependencies are up to date"
      continue-on-error: true

  # File Size Check
  file-size-check:
    name: File Size Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for large files
      run: |
        echo "Checking for files larger than 10MB..."
        find . -type f -size +10M -not -path "./.git/*" -not -path "./node_modules/*" -not -path "./frontend/node_modules/*" -not -path "./backend/node_modules/*" | head -10
      continue-on-error: true
